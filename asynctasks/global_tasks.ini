[file-build:debug]
command=gcc -g "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)" -lstd++ -std=c++17
output=quickfix
cwd=$(VIM_FILEDIR)
save=2

[file-build:release]
command=gcc -O2 "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)" -lstd++ -std=c++17
output=quickfix
cwd=$(VIM_FILEDIR)
save=2

[file-run]
command="$(VIM_FILEPATH)"
command:c,cpp="$(VIM_PATHNOEXT)"
command:python=python "$(VIM_FILENAME)"
command:make=make -f "$(VIM_FILENAME)" run
command:sh=bash "$(VIM_FILENAME)"
command:zsh=zsh "$(VIM_FILENAME)"
command:vim=:source %
output=terminal
cwd=$(VIM_FILEDIR)
save=2

[project-init:debug]
command=mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=1 .. && ln -s compile_commands.json ..
cwd=<root>
errorformat=

[project-init:release]
command=mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=1 .. && ln -s compile_commands.json ..
cwd=<root>
errorformat=

[project-build]
command=cmake --build build
cwd=<root>
errorformat=%f:%l:%m

[project-run]
command="build/$(VIM_PRONAME)"
cwd=<root>
output=terminal

[catkin-init:release]
command=bash ~/dotfiles/bash_scripts/catkin_init.bash --release $(?packages)
cwd=$(VIM_CWD)
output=terminal

[catkin-init:debug]
command=bash ~/dotfiles/bash_scripts/catkin_init.bash --debug $(?packages)
cwd=$(VIM_CWD)
output=terminal
